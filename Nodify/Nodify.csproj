<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>
    <TargetFrameworks>net9.0;net9.0-ios;net9.0-maccatalyst;net9.0-android;net9.0-browserwasm;net9.0-desktop;</TargetFrameworks>
    <UnoSingleProject>true</UnoSingleProject>
    <OutputType>Library</OutputType>
    <!-- Ensures the .xr.xml files are generated in a proper layout folder -->
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
    <Nullable>enable</Nullable>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Authors>miroiu</Authors>
    <Company />
    <PackageId>Nodify</PackageId>
    <Product>Nodify</Product>
    <Description>The core controls for a node based editor (designed for MVVM)</Description>
    <Copyright>Miroiu Emanuel</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/miroiu/nodify</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <RepositoryUrl>https://github.com/miroiu/nodify</RepositoryUrl>
    <PackageTags>wpf mvvm node network node-editor graph controls</PackageTags>
    <Version>7.0.0</Version>
    <PackageReleaseNotes>
      > - Breaking Changes:
      >	  - Made the setter of NodifyEditor.IsPanning private
      >	  - Made SelectionHelper internal
      >	  - Renamed HandleRightClickAfterPanningThreshold to MouseActionSuppressionThreshold in NodifyEditor
      >	  - Renamed StartCutting to BeginCutting in NodifyEditor
      >	  - Renamed Connector.EnableStickyConnections to ConnectorState.EnabledToggledConnectingMode
      >	  - Renamed PushItems to UpdatePushedArea and StartPushingItems to BeginPushingItems in NodifyEditor
      >	  - Renamed UnselectAllConnection to UnselectAllConnections in NodifyEditor
      >	  - Removed DragStarted, DragDelta and DragCompleted routed events from ItemContainer
      >	  - Replaced the System.Windows.Input.MouseGesture with Nodify.Interactivity.MouseGesture for default EditorGesture mappings
      >	  - Removed State, GetInitialState, PushState, PopState and PopAllStates from NodifyEditor and ItemContainer
      >	  - Replaced EditorState and ContainerState with InputElementState
      >	  - Moved AllowCuttingCancellation from CuttingLine to NodifyEditor
      >	  - Moved AllowDraggingCancellation from ItemContainer to NodifyEditor
      >	  - Moved EditorGestures under the Nodify.Interactivity namespace
      >	  - Moved editor events under the Nodify.Events namespace
      > - Features:
      >	  - Added BeginPanning, UpdatePanning, EndPanning, CancelPanning and AllowPanningCancellation to NodifyEditor and Minimap
      >	  - Added MouseLocation, ZoomAtPosition and GetLocationInsideMinimap to Minimap
      >	  - Added UpdateCuttingLine to NodifyEditor
      >	  - Added Select, BeginSelecting, UpdateSelection, EndSelecting, CancelSelecting and AllowSelectionCancellation to NodifyEditor
      >	  - Added IsDragging, BeginDragging, UpdateDragging, EndDragging and CancelDragging to NodifyEditor
      >	  - Added AlignSelection and AlignContainers methods to NodifyEditor
      >	  - Added LockSelection and UnlockSelection methods to NodifyEditor and EditorCommands
      >	  - Added ItemsMoved routed event to NodifyEditor
      >	  - Added HasCustomContextMenu dependency property to NodifyEditor, ItemContainer, Connector and BaseConnection
      >	  - Added Select, BeginDragging, UpdateDragging, EndDragging and CancelDragging to ItemContainer
      >	  - Added PreserveSelectionOnRightClick configuration field to ItemContainer
      >	  - Added BeginConnecting, UpdatePendingConnection, EndConnecting, CancelConnecting and RemoveConnections methods to Connector
      >	  - Added FindTargetConnector and FindConnectionTarget methods to Connector
      >	  - Added a custom MouseGesture with support for key combinations
      >	  - Added InputProcessor to NodifyEditor, ItemContainer, Connector, BaseConnection and Minimap, enabling the extension of controls with custom states
      >	  - Added DragState to simplify creating click-and-drag interactions, with support for initiating and completing them using the keyboard
      >	  - Added InputElementStateStack, InputElementStateStack.DragState and InputElementStateStack.InputElementState to manage transitions between states in UI elements
      >	  - Added InputProcessor.Shared to enable the addition of global input handlers
      >	  - Move the viewport to the mouse position when zooming on the Minimap if ResizeToViewport is false
      >	  - Added SplitAtLocation and Remove methods to BaseConnection
      >	  - Added AllowPanningWhileSelecting, AllowPanningWhileCutting and AllowPanningWhilePushingItems to EditorState
      >	  - Added AllowZoomingWhilePanning, AllowZoomingWhileSelecting, AllowZoomingWhileCutting and AllowZoomingWhilePushingItems to EditorState
      >	  - Added EnableToggledSelectingMode, EnableToggledPanningMode, EnableToggledPushingItemsMode and EnableToggledCuttingMode to EditorState
      >	  - Added MinimapState.EnableToggledPanningMode
      >	  - Added ContainerState.EnableToggledDraggingMode
      >	  - Added Unbind to InputGestureRef and EditorGestures.SelectionGestures
      >	  - Added EnableHitTesting to PendingConnection
      > - Bugfixes:
      >	  - Fixed an issue where the ItemContainer was selected by releasing the mouse button on it, even when the mouse was not captured
      >	  - Fixed an issue where the ItemContainer could open its context menu even when it was not selected
      >	  - Fixed an issue where the Home button caused the editor to fail to display items when contained within a ScrollViewer
      >	  - Fixed an issue where connector optimization did not work when SelectedItems was not data-bound
      >	  - Fixed EditorCommands.Align to perform a single arrange invalidation instead of one for each aligned container
      >	  - Fixed an issue where controls would capture the mouse unnecessarily; they now capture it only in response to a defined gesture
      >	  - Fixed an issue where the minimap could update the viewport without having the mouse captured
      >	  - Fixed ItemContainer.Select and NodifyEditor.SelectArea to clear the existing selection and select the containers within the same transaction
      >	  - Fixed an issue where editor interactions failed to cancel upon losing mouse capture
      >	  - Fixed an issue where selecting a new connection would not clear the previous selection within the same transaction
    </PackageReleaseNotes>
    <AssemblyOriginatorKeyFile>..\build\Nodify.snk</AssemblyOriginatorKeyFile>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)'=='net472' OR '$(TargetFramework)'=='net48'">
    <LangVersion>8.0</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <SignAssembly>true</SignAssembly>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\icon.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
